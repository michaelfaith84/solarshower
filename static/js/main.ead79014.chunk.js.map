{"version":3,"sources":["logo.svg","context/Context.js","components/Form.js","components/About.js","components/Header.js","components/Result.js","context/types.js","context/Reducer.js","context/State.js","components/Handler.js","App.js","index.js"],"names":["alertContext","createContext","Form","showResults","useContext","Context","useState","useRef","time","rate","values","setValues","onChange","e","re","RegExp","res","target","value","match","name","Row","Col","InputGroup","className","size","Prepend","Text","id","FormControl","placeholder","ButtonGroup","Button","variant","onClick","block","About","props","Modal","centered","Header","closeButton","Title","Body","Footer","onHide","React","modalShow","setModalShow","href","show","Result","context","gallons","weight","result","reset","setLength","substr","Card","Nav","defaultActiveKey","Item","Link","eventKey","length","SA","PW","SHOW_RESULTS","RESET","SET_LENGTH","state","action","type","console","log","payload","results","State","useReducer","Reducer","dispatch","Provider","volume","toFixed","ID","OD","map","Object","assign","Math","PI","pow","children","Handler","keys","App","Container","md","span","offset","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ead79014.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createContext } from \"react\";\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { Fragment, useState, useRef, useContext } from \"react\";\nimport Context from \"../context/Context\";\nimport {\n  Row,\n  Col,\n  InputGroup,\n  FormControl,\n  Overlay,\n  Tooltip,\n  Button,\n  ButtonGroup,\n} from \"react-bootstrap\";\n\nconst Form = () => {\n  const context = useContext(Context);\n\n  const { showResults } = context;\n\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n\n  const [values, setValues] = useState({\n    time: \"\",\n    rate: \"\",\n  });\n\n  const { time, rate } = values;\n\n  const onChange = (e) => {\n    const re = new RegExp(/^\\d*\\.?\\d*/);\n    const res = e.target.value.match(re) ? e.target.value.match(re)[0] : 0;\n    setValues({ ...values, [e.target.name]: res });\n  };\n\n  const averageRate = (e) => {\n    setValues({ ...values, rate: 2.5 });\n  };\n\n  const ecoRate = (e) => {\n    setValues({ ...values, rate: 1.6 });\n  };\n\n  const onClick = (e) => {\n    if (time > 0 && rate > 0) {\n      showResults(time, rate);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Row>\n        <Col>\n          <InputGroup className=\"mb-3\" size=\"lg\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"shower-time\">\n                <i className=\"fal fa-shower\"></i>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"Time (Minutes)\"\n              aria-label=\"time\"\n              aria-describedby=\"shower-time\"\n              name=\"time\"\n              value={time}\n              onChange={onChange}\n            />\n          </InputGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"text-center\">\n          <ButtonGroup\n            aria-label=\"Common Rates\"\n            className=\"pb-3 w-100\"\n            size=\"lg\"\n          >\n            <Button\n              variant=\"warning\"\n              className=\"text-white\"\n              onClick={averageRate}\n            >\n              Average\n            </Button>\n            <Button variant=\"success\" onClick={ecoRate}>\n              Eco\n            </Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputGroup className=\"mb-3\" size=\"lg\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"flow-rate\">\n                <i className=\"fal fa-water-lower\"></i>\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              placeholder=\"Flow (Gallons Per Minute)\"\n              aria-label=\"rate\"\n              aria-describedby=\"flow-rate\"\n              name=\"rate\"\n              value={rate}\n              onChange={onChange}\n            />\n          </InputGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Button size=\"lg\" block=\"true\" onClick={onClick}>\n            MATH!\n          </Button>\n        </Col>\n      </Row>\n    </Fragment>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst About = (props) => {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">About</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>Returned Values</h4>\n        <p>\n          The idea was the work from an easy starting point: how much shower\n          time do I need? To do this, we need to have a flow rate. The \"Average\"\n          and \"Eco\" buttons set this to typical US values but you won't get\n          these rates without pressurizing the tank which is typically done with\n          air. I toyed with adding head pressure calculations based on vessel\n          lengths (assuming it would be rotated to stand on end) but the tldr\n          was that it had to be about 30' long to get something approaching\n          normal water pressure which is pretty impractical not to mention that\n          this would be the peak pressure--which would drop as the vessel\n          emptied.\n        </p>\n        <p>\n          Why do I include small sizes? No one said you have to design the thing\n          as a tube. A grid of smaller pipes, for example, would offer a\n          greater surface area which would increase its thermal efficiency.\n        </p>\n        <p>\n          The pipe's surface area is included to aid in the planning of painting to protect\n          the plastic and optimize thermal efficiency.\n        </p>\n        <p>\n          I also include pipe weight (based on schedule 40) to help you\n          calculate the total system weight.\n        </p>\n        <h4>Why CPVC?</h4>\n        <p>\n          ABS is the goto choice as it's cheap and black already, however, ABS\n          is meant for sewage. Not only is it not food-safe (not that most of\n          you are drinking from it) it often contains BPA which is absorbed\n          through the skin as well as other nasty potentially nasty things. The\n          big issue is that research is not done on this material with regardes\n          to human safety. PVC is another cheaper CPVC alternative, however,\n          it's only rated to 140&#8457;. Feel fee to read about the extreme\n          temps that build up in containers left in the sun (such as a car).\n          CPVC is, so far as I can tell, the safest material for this role.\n        </p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport About from \"./About\";\n\nconst Header = () => {\n  const [modalShow, setModalShow] = React.useState(false);\n  const onClick = () => {\n    modalShow === false ? setModalShow(true) : setModalShow(true);\n  };\n  return (\n    <section id=\"header\">\n      <h1 className=\"mt-5 mb-4\">\n        CPVC Solar Shower <i className=\"far fa-calculator\"></i>\n      </h1>\n      <p className=\"pb-3\">\n        <Button onClick={onClick} href=\"#\">\n          About\n        </Button>\n      </p>\n      <About show={modalShow} onHide={() => setModalShow(false)} />\n    </section>\n  );\n};\n\nexport default Header;\n","import React, { Fragment, useContext } from \"react\";\nimport { Nav, Card, Col, Row, Button } from \"react-bootstrap\";\nimport Context from \"../context/Context\";\n\nconst Result = () => {\n  const context = useContext(Context);\n\n  const { gallons, weight, result, reset, setLength } = context;\n\n  const onClick = (e) => {\n    setLength(e.target.id.substr(1));\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Card.Header>\n          <Nav variant=\"tabs\" defaultActiveKey=\"#s2\">\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s2\" id=\"s2\" onClick={onClick}>\n                2\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s2.5\" id=\"s2.5\" onClick={onClick}>\n                2.5\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s3\" id=\"s3\" onClick={onClick}>\n                3\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s3.5\" id=\"s3.5\" onClick={onClick}>\n                3.5\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s4\" id=\"s4\" onClick={onClick}>\n                4\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s5\" id=\"s5\" onClick={onClick}>\n                5\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s6\" id=\"s6\" onClick={onClick}>\n                6\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s8\" id=\"s8\" onClick={onClick}>\n                8\"\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"#s10\" id=\"s10\" onClick={onClick}>\n                10\"\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Card.Header>\n        <Card.Body>\n          <Card.Text>\n            <Row>\n              <Col className=\"text-center\">\n                <h4>Length</h4>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center pb-3\">{result.length} feet</Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center\">\n                <h4>Surface Area</h4>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center pb-3\">{result.SA} ft<sup>2</sup></Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center\">\n                <h4>Weight</h4>\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"text-center\">{result.PW} lbs</Col>\n            </Row>\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer>\n          <Col className=\"text-center\">\n            <h4>Water</h4>\n          </Col>\n          <Row>\n            <Col className=\"text-center\">{gallons} gallons</Col>\n          </Row>\n          <Row>\n            <Col className=\"text-center\">{weight} lbs</Col>\n          </Row>\n        </Card.Footer>\n      </Card>\n      <Button className=\"mt-4\" block=\"true\" onClick={reset}>\n        Reset\n      </Button>\n    </Fragment>\n  );\n};\n\nexport default Result;\n","export const SHOW_RESULTS = \"SHOW_RESULTS\";\nexport const RESET = \"RESET\";\nexport const SET_LENGTH = \"SET_LENGTH\";\n","import { SHOW_RESULTS, RESET, SET_LENGTH } from \"./types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SHOW_RESULTS:\n      console.log(action.payload);\n      return { ...state, ...action.payload };\n    case RESET:\n      return {\n        gallons: 0,\n        weight: 0,\n        results: {},\n        result: {},\n      };\n    case SET_LENGTH:\n      return { ...state, result: state.results[action.payload] };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport Context from \"./Context\";\nimport { SHOW_RESULTS, RESET, SET_LENGTH } from \"./types\";\nimport Reducer from \"./Reducer\";\n\nconst State = (props) => {\n  const initialState = {\n    gallons: 0,\n    weight: 0,\n    results: {},\n    result: 0,\n  };\n\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  // Set Alert\n  const showResults = (time, rate) => {\n    // Diameters are in inches, weight is pounds per foot.\n    const sizes = [\n      { ID: 2, OD: 2.375, weight: 0.803 },\n      { ID: 2.5, OD: 2.875, weight: 1.267 },\n      { ID: 3, OD: 3.5, weight: 1.66 },\n      { ID: 3.5, OD: 4, weight: 1.996 },\n      { ID: 4, OD: 4.5, weight: 2.363 },\n      { ID: 5, OD: 5.563, weight: 2.874 },\n      { ID: 6, OD: 6.625, weight: 4.164 },\n      { ID: 8, OD: 8.625, weight: 6.268 },\n      { ID: 10, OD: 10.75, weight: 8.886 },\n    ];\n    // Inner Diameters\n    const IDs = [2, 2.5, 3, 4, 5, 6, 8];\n    // 231 in^3 == 1 gallon of water\n    const volume = time * rate * 231;\n    const gallons = (time * rate).toFixed(2);\n    const weight = (gallons * 8.33).toFixed(2);\n    let results = {};\n    sizes.map((e) => {\n      results = Object.assign(\n        {\n          [e.ID]: {\n            length: (volume / (Math.PI * Math.pow(0.5 * e.ID, 2)) / 12).toFixed(\n              2\n            ),\n            // A=2πrh+2πr2\n            SA: ((\n              2 *\n                Math.PI *\n                (0.5 * e.OD) *\n                ((volume ) / (Math.PI * Math.pow(0.5 * e.ID, 2))  ) +\n              2 * Math.PI * Math.pow(0.5 * e.OD, 2)\n            )/144).toFixed(2),\n            PW: (\n              (volume / (Math.PI * Math.pow(0.5 * e.ID, 2)) / 12) *\n              e.weight\n            ).toFixed(2),\n          },\n        },\n        results\n      );\n    });\n    dispatch({\n      type: SHOW_RESULTS,\n      payload: { weight, gallons, results: results, result: results[\"2\"] },\n    });\n  };\n\n  const setLength = (length) => {\n    dispatch({ type: SET_LENGTH, payload: length });\n  };\n\n  const reset = () => {\n    dispatch({ type: RESET });\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        gallons: state.gallons,\n        weight: state.weight,\n        results: state.results,\n        result: state.result,\n        showResults,\n        reset,\n        setLength,\n      }}\n    >\n      {props.children}\n    </Context.Provider>\n  );\n};\n\nexport default State;\n","import React, { useContext } from \"react\";\nimport Context from \"../context/Context\";\nimport Result from \"./Result\";\nimport Form from \"./Form\";\n\nconst Handler = () => {\n  const context = useContext(Context);\n\n  const { results } = context;\n  return Object.keys(results).length > 0 ? <Result /> : <Form />;\n};\n\nexport default Handler;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Header from \"./components/Header\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Result from \"./components/Result\";\nimport React from \"react\";\nimport Context from \"./context/Context\";\nimport State from \"./context/State\";\nimport Handler from \"./components/Handler\";\n\nfunction App() {\n  return (\n    <State>\n      <div className=\"App\">\n        <Container>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }}>\n              <Header />\n              <Handler />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </State>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}